{"version":3,"sources":["Components/ShowMessage.js","Components/Time.js","Components/ShowQuotes.js","index.js"],"names":["texts","Morning","textAlert","wish","Noon","Afternoon","Evening","NightOne","Midnight","NightTwo","ShowMessage","props","hour","min","timeDetect","_texts$hour","react_default","a","createElement","className","Time","state","time","Date","toLocaleTimeString","date","toLocaleDateString","_this2","this","setInterval","currentTime","currentDate","currentHour","getHours","currentMin","getMinutes","setState","src_Components_ShowMessage","React","Component","quotes","rendomNum","Math","floor","random","length","quoteText","quoteAuthor","ShowQuotes","App","src_Components_Time","src_Components_ShowQuotes","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.8a4951f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ShowMessage.css';\r\n\r\n\r\n    // Wishes based on time\r\nconst texts = {\r\n    Morning : {\r\n        textAlert: \"It's Morning Now\",\r\n        wish: \"Wish you have a nice day. :)\"\r\n    },\r\n    Noon: {\r\n        textAlert: \"It's Noon Now\",\r\n        wish: \"Half of the day is passed!!\"\r\n    },\r\n    Afternoon: {\r\n        textAlert: \"It's Afternoon Now\",\r\n        wish: \"Did you have lunch??\"\r\n    },\r\n    Evening: {\r\n        textAlert: \"It's Evening Now\",\r\n        wish: \"How was your day??\"\r\n    },\r\n    NightOne: {\r\n        textAlert: \"It's Night Now\",\r\n        wish: \"Did you have dinner??\"\r\n    },\r\n    Midnight: {\r\n        textAlert: \"It's Midnight Now\",\r\n        wish: \"Let's start a new Day!\"\r\n    },\r\n    NightTwo: {\r\n        textAlert: \"It's pretty late Now\",\r\n        wish: \"You should sleep!!\"\r\n    }\r\n\r\n}\r\n\r\n    // Getting Moments based on time\r\nconst timeDetect = (hour, min) => {\r\n\r\n    if (hour === 0 && min === 0) {\r\n        return 'Midnight';\r\n    }\r\n    if(hour < 5.00) {\r\n        return 'NightTwo';\r\n    }\r\n    if(hour > 5.00 && hour < 12.00) {\r\n        return 'Morning';\r\n    };\r\n    if(hour === 12.00 && min === 0) {\r\n        return 'Noon';\r\n    };\r\n    if( hour => 12.00 && min >= 1 && hour < 17.00) {\r\n        return 'Afternoon';\r\n    };\r\n    if(hour >= 17.00 && hour < 19.00) {\r\n        return 'Evening';\r\n    };\r\n    if (hour >= 19.00 && hour < 24.00) {\r\n        return 'NightOne';\r\n    };\r\n} \r\n\r\n\r\nconst ShowMessage = props => {\r\n        // passing current time to condition\r\n    const hour = timeDetect(props.hour, props.min );\r\n    const {textAlert, wish} = texts[hour];\r\n\r\n    return (\r\n        <div className='text-container'>\r\n            <div className='text-alert'>{textAlert}</div>\r\n            <div className='wish'>{wish}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowMessage;","import React from 'react';\r\nimport ShowMessage from './ShowMessage';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    state = {\r\n        time: new Date().toLocaleTimeString(),\r\n        date: new Date().toLocaleDateString(),\r\n        hour: null,\r\n        min: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            const currentTime = new Date().toLocaleTimeString();\r\n            const currentDate = new Date().toLocaleDateString();\r\n            const currentHour = new Date().getHours();\r\n            const currentMin = new Date().getMinutes();\r\n\r\n            this.setState({\r\n                time: currentTime, date: currentDate,\r\n                hour: currentHour, min: currentMin\r\n            });\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ShowMessage hour={this.state.hour} min={this.state.min} /> \r\n                <span className='time'>{this.state.time}</span>\r\n                <span className='date'>{this.state.date}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Time;","import React from 'react';\r\nimport './ShowQuotes.css'; \r\n\r\n        // Quotes\r\n        const quotes = [\r\n            ['The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.', 'Helen Keller'],\r\n            ['Keep love in your heart. A life without it is like a sunless garden when the flowers are dead.', 'Oscar Wilde'],\r\n            ['It is during our darkest moments that we must focus to see the light.', 'Aristotle'],\r\n            ['Try to be a rainbow in someone\\'s cloud.', 'Maya Angelou'],\r\n            ['Find a place inside where there\\'s joy, and the joy will burn out the pain.', 'Joseph Campbell'],\r\n            ['One of the most beautiful qualities of true friendship is to understand and to be understood.', 'Lucius Annaeus Seneca'],\r\n            ['Where there is love there is life.', 'Mahatma Gandhi'],\r\n            ['Do not go where the path may lead, go instead where there is no path and leave a trail.', 'Ralph Waldo Emerson'],\r\n            ['Blessed are the hearts that can bend; they shall never be broken.', 'Albert Camus'],\r\n            ['In three words I can sum up everything I\\'ve learned about life: it goes on.', 'Robert Frost'],\r\n            ['Change your thoughts and you change your world.', 'Norman Vincent Peale'],\r\n            ['Believe you can and you\\'re halfway there.', 'Theodore Roosevelt'],\r\n            ['Everything has beauty, but not everyone sees it.', 'Confucius'],\r\n            ['Life isn\\'t about finding yourself.Life is about creating yourself.', 'George Bernard Shaw'],\r\n            ['Life is not a problem to be solved, but a reality to be experienced.', 'Soren Kierkegaard'],\r\n            ['Friends show their love in times of trouble, not in happiness.', 'Euripides'],\r\n            ['We love life, not because we are used to living but because we are used to loving.', 'Friedrich Nietzsche'],\r\n            ['Problems are not stop signs, they are guidelines.', 'Robert H. Schuller'],\r\n            ['Wise men speak because they have something to say; Fools because they have to say something.', 'Plato'],\r\n            ['The secret of getting ahead is getting started.', 'Mark Twain'],\r\n\r\n        ]\r\n\r\n        const rendomNum = Math.floor(Math.random() * quotes.length);\r\n        const quoteText = quotes[rendomNum][0];\r\n        const quoteAuthor = quotes[rendomNum][1];\r\n\r\n        const ShowQuotes = () => {\r\n            return (\r\n                <div className='quote-container'>\r\n                    <p className='quote-text'>{quoteText}</p>\r\n                    <br></br>\r\n                    <p className='quote-author'>--{quoteAuthor}</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\nexport default ShowQuotes;","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Time from './Components/Time';\r\nimport ShowQuotes from './Components/ShowQuotes';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Time />\r\n                <ShowQuotes />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}